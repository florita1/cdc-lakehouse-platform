apiVersion: batch/v1
kind: Job
metadata:
  name: ch-init-job
  namespace: clickhouse
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    # (optional) make sure this runs after CHI is reconciled
    # argocd.argoproj.io/sync-wave: "10"
spec:
  activeDeadlineSeconds: 300           # hard stop after 5 minutes
  backoffLimit: 0                      # don't retry on failure
  ttlSecondsAfterFinished: 600         # auto-cleanup 10 min later
  template:
    spec:
      terminationGracePeriodSeconds: 10
      restartPolicy: Never
      containers:
        - name: init
          image: clickhouse/clickhouse-server:24.6
          command: ["/bin/sh","-c"]
          args:
            - |
              set -euo pipefail
              CH_HOST="clickhouse.clickhouse.svc.cluster.local"   # <- update if your svc name differs
              CH_PORT=9000
              # fail after 300s if CH never becomes reachable
              END=$((SECONDS+300))
              until clickhouse-client --host "$CH_HOST" --port "$CH_PORT" --query "SELECT 1" --receive_timeout=3; do
                if [ "${SECONDS}" -ge "${END}" ]; then
                  echo "ERROR: Timed out waiting for ClickHouse at ${CH_HOST}:${CH_PORT}"
                  exit 1
                fi
                echo "waiting for ClickHouse..."; sleep 3
              done
              clickhouse-client --host "$CH_HOST" --port "$CH_PORT" --multiquery < /init/init.sql
          volumeMounts:
            - name: init-sql
              mountPath: /init
      volumes:
        - name: init-sql
          configMap:
            name: ch-init-sql
