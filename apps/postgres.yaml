# apps/postgres.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: postgres
  namespace: wal-cdc-argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: postgres
  source:
    repoURL: https://charts.bitnami.com/bitnami
    chart: bitnami/postgresql
    targetRevision: 16.7.21
    helm:
      values: |
        auth:
          username: app
          password: app-password
          database: appdb
        primary:
          extendedConfiguration: |
            wal_level = logical
            max_wal_senders = 10
            max_replication_slots = 10
            wal_keep_size = '512MB'
          initdb:
            scripts:
              00_schema.sql: |
                CREATE SCHEMA IF NOT EXISTS app;
                CREATE TABLE IF NOT EXISTS app.users (
                  id UUID PRIMARY KEY,
                  email TEXT NOT NULL UNIQUE,
                  name TEXT,
                  updated_at TIMESTAMPTZ DEFAULT now()
                );
                ALTER TABLE app.users REPLICA IDENTITY FULL;
                GRANT USAGE ON SCHEMA app TO "app";
                GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA app TO "app";
              10_publication.sql: |
                -- Optional; Debezium can also auto-manage this
                DO $$
                BEGIN
                  IF NOT EXISTS (SELECT 1 FROM pg_publication WHERE pubname = 'dbz_pub') THEN
                    CREATE PUBLICATION dbz_pub FOR TABLE app.users;
                  END IF;
                END$$;
