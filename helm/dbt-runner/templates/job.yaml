apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-dbt-build
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    # Let Argo recreate the Job on changes
    argocd.argoproj.io/sync-options: Replace=true
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      restartPolicy: Never

      # -------------------------
      # Fetch dbt project files
      # -------------------------
      initContainers:
        - name: fetch-project
          image: alpine:3
          command: ["/bin/sh","-lc"]
          args:
            - |
              set -e
              apk add --no-cache git ca-certificates
              # Clone default branch (or pin via .Values.source.revision if you want)
              git clone --depth=1 --filter=blob:none {{ .Values.source.repoURL }} /work/src
              mkdir -p /work/dbt
              cp -r /work/src/{{ .Values.source.subPath }}/. /work/dbt/
              test -f /work/dbt/dbt_project.yml || { echo "dbt_project.yml not found"; exit 1; }
          volumeMounts:
            - name: workdir
              mountPath: /work

      # -------------------------
      # Run dbt build
      # -------------------------
      containers:
        - name: dbt
          image: python:3.11-slim
          imagePullPolicy: IfNotPresent
          env:
            - name: CLICKHOUSE_HOST
              value: {{ .Values.clickhouse.host | quote }}
            - name: CLICKHOUSE_PORT
              value: {{ .Values.clickhouse.port | quote }}
            - name: CLICKHOUSE_USER
              value: {{ .Values.clickhouse.user | quote }}
            - name: CLICKHOUSE_DB
              value: {{ .Values.clickhouse.database | quote }}
            - name: CLICKHOUSE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: password
            - name: DBT_PROFILES_DIR
              value: /work/profiles
          workingDir: /work/dbt
          command: ["/bin/sh","-lc"]
          args:
          - |
            set -e
            python -m pip install --no-cache-dir --upgrade pip
            # Keep core/adapter majors aligned
            pip install --no-cache-dir "dbt-core>=1.7,<1.9" "dbt-clickhouse>=1.7,<1.9"
            mkdir -p /work/profiles
            cat > /work/profiles/profiles.yml <<EOF
            clickhouse:
              target: prod
              outputs:
                prod:
                  type: clickhouse
                  host: "${CLICKHOUSE_HOST}"
                  port: ${CLICKHOUSE_PORT}
                  user: "${CLICKHOUSE_USER}"
                  password: "${CLICKHOUSE_PASSWORD}"
                  schema: "${CLICKHOUSE_DB}"
                  secure: false
                  http_compression: true
                  verify: false
                  connect_timeout: 10
                  retries: 3
            EOF
            dbt --version
            dbt deps || true
            dbt build --profiles-dir /work/profiles --project-dir /work/dbt --target prod
          volumeMounts:
            - name: workdir
              mountPath: /work

      volumes:
        - name: workdir
          emptyDir: {}
