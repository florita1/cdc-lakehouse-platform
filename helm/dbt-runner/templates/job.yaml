apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-dbt-build
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  annotations:
    argocd.argoproj.io/sync-options: Replace=true
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      restartPolicy: Never

      initContainers:
        - name: fetch-project
          image: alpine/git:2.45
          command: ["/bin/sh","-lc"]
          args:
            - |
              set -e
              git clone --depth=1 --filter=blob:none \
                --branch {{ .Values.source.revision | default "HEAD" }} \
                {{ .Values.source.repoURL }} /work/src
              mkdir -p /work/dbt
              cp -r /work/src/{{ .Values.source.subPath }}/. /work/dbt/
          volumeMounts:
            - name: workdir
              mountPath: /work

      containers:
        - name: dbt
          image: ghcr.io/dbt-labs/dbt-clickhouse:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: CLICKHOUSE_HOST
              value: {{ .Values.clickhouse.host | quote }}
            - name: CLICKHOUSE_PORT
              value: {{ .Values.clickhouse.port | quote }}
            - name: CLICKHOUSE_USER
              value: {{ .Values.clickhouse.user | quote }}
            - name: CLICKHOUSE_DB
              value: {{ .Values.clickhouse.database | quote }}
            - name: CLICKHOUSE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.name }}
                  key: password
            - name: DBT_PROFILES_DIR
              value: /work/profiles
          workingDir: /work/dbt
          command: ["/bin/sh","-lc"]
          args:
            - |
              mkdir -p /work/profiles
              cat > /work/profiles/profiles.yml <<'EOF'
              clickhouse:
                target: prod
                outputs:
                  prod:
                    type: clickhouse
                    host: "${CLICKHOUSE_HOST}"
                    port: ${CLICKHOUSE_PORT}
                    user: "${CLICKHOUSE_USER}"
                    password: "${CLICKHOUSE_PASSWORD}"
                    schema: "${CLICKHOUSE_DB}"
                    secure: false
                    http_compression: true
                    verify: false
                    connect_timeout: 10
                    retries: 3
              EOF
              dbt deps || true
              dbt build --profiles-dir /work/profiles --project-dir /work/dbt --target prod
          volumeMounts:
            - name: workdir
              mountPath: /work

      volumes:
        - name: workdir
          emptyDir: {}
